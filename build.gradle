buildscript {
    ext.kotlin_version = '1.2.41'
    ext.ktor_version = '0.9.2'


    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.3'

    }
}

group 'iroha'
version '1.0-SNAPSHOT'

apply plugin: 'kotlin'
apply plugin: 'com.google.protobuf'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://dl.bintray.com/kotlin/ktor" }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // protobuf
    compile 'com.google.protobuf:protobuf-java:3.5.0'
    compile 'io.grpc:grpc-netty:1.8.0'
    compile 'io.grpc:grpc-protobuf:1.8.0'
    compile 'io.grpc:grpc-stub:1.8.0'

    // ------------------| Src dependencies |------------------

    // kotlin related
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    // rx2
    compile "io.reactivex.rxjava2:rxjava:2.0.0"
    compile "io.reactivex.rxjava2:rxkotlin:2.0.0"

    // logging
    compile 'org.slf4j:slf4j-simple:1.7.25'
    compile 'io.github.microutils:kotlin-logging:1.4.9'

    // CLI arguments
    compile group: 'com.xenomachina', name: 'kotlin-argparser', version: '2.0.6'

    // Kyber
    // TODO @muratovv: add lib

    // Ktor - http
    compile "io.ktor:ktor-server-core:$ktor_version"
    compile "io.ktor:ktor-server-netty:$ktor_version"
    compile "io.ktor:ktor-html-builder:$ktor_version"
    compile "io.ktor:ktor-websockets:$ktor_version"


    // JSON converter
    implementation 'com.squareup.moshi:moshi-kotlin:1.5.0'

    // for Result
    compile group: 'com.github.kittinunf.result', name: 'result', version: '1.4.0'


    // ------------------| Test dependencies |------------------

    // unit tests
    compile "org.junit.jupiter:junit-jupiter-api:5.2.0"

    testCompile('org.junit.jupiter:junit-jupiter-api:5.2.0')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')
    compile 'org.mockito:mockito-inline:2.18.3'
    compile('com.nhaarman:mockito-kotlin:1.5.0') {
        exclude group: 'org.jetbrains.kotlin'
        exclude group: 'org.mockito'
    }

    def iroha_bindings_dir = projectDir.toString().concat("/iroha_bindings")
    compile fileTree(dir: iroha_bindings_dir, include: '*.jar')
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
